@inject NavigationManager navigationManager
@inject RepresentantesService RepService
@inject SucursalesService sucursalesService;
@inject JefesService jefesService;


<EditForm Model="@oVentasEmpleado" OnValidSubmit="@guardar">
    <DataAnnotationsValidator />
    <div class="mt-3">
        <label>Numero de Empleado</label>
        <InputNumber class="form-control" @bind-Value="oVentasEmpleado.IdEmpleado" disabled ="true" />
        <ValidationMessage For="(() => oVentasEmpleado.IdEmpleado)" />
    </div>
    <div class="mt-3">
        <label>Nombre del Empleado</label>
        <InputText class="form-control" @bind-Value="oVentasEmpleado.Nombre" />
        <ValidationMessage For="(() => oVentasEmpleado.Nombre)" />
    </div>
    <div class="mt-3">
        <label>Edad</label>
        <InputNumber class="form-control" @bind-Value="oVentasEmpleado.Edad" />
        <ValidationMessage For="(() => oVentasEmpleado.Edad)" />
    </div>
    <div class="mt-3">
        <label>Cargo</label>
        <InputText class="form-control" @bind-Value="oVentasEmpleado.Cargo" />
        <ValidationMessage For="(() => oVentasEmpleado.Cargo)" />
    </div>
    <div class="mt-3">
        <label>Fecha</label>
        <InputDate class="form-control"
                   @bind-Value="oVentasEmpleado.FechaContrato"
                   min="2000-01-01"
                   max="@FechaMaxima" />
        <ValidationMessage For="(() => oVentasEmpleado.FechaContrato)" />
    </div>
    <div class="mt-3">
        <label>Cuota</label>
        <InputNumber class="form-control" @bind-Value="oVentasEmpleado.Cuota" />
        <ValidationMessage For="(() => oVentasEmpleado.Cuota)" />
    </div>
    <div class="mt-3">
        <label>Sucursal</label>
        <InputSelect class="form-control" @bind-Value="oVentasEmpleado.idSucursales">
            @foreach (var item in listSucursales)
            {
                <option value="@item.Id">@sucursalesService.getNombre(item.Id)</option>                
            }
        </InputSelect>
        <ValidationMessage For="(() => oVentasEmpleado.IdEmpleado)" />
    </div>
    <div class="mt-3">
        <label>Jefe</label>
        <InputSelect class="form-control" @bind-Value="oVentasEmpleado.idJefe">
            @foreach (var item in listJefes)
            {
                <option value="@item.idJefe">@jefesService.getNombre(item.idJefe)</option>
            }
        </InputSelect>
        <ValidationMessage For="(() => oVentasEmpleado.Cuota)" />
    </div>
    <div class="mt-3">
        <label>Cuota</label>
        <InputNumber class="form-control" @bind-Value="oVentasEmpleado.Cuota" />
        <ValidationMessage For="(() => oVentasEmpleado.Cuota)" />
    </div>
    <div class="mt-3">
        <label>Ventas</label>
        <InputNumber class="form-control" @bind-Value="oVentasEmpleado.Ventas" />
        <ValidationMessage For="(() => oVentasEmpleado.Ventas)" />
    </div>
    <div class="mt-3">
        <button type="submit" class="btn btn-success">Guardar</button>
        <button class="btn btn-danger" onclick="@regresar">Regresar</button>
    </div>
</EditForm>

@code {
    [Parameter ]
    public int idVendedor { get; set; } 
    public oVentas oVentasEmpleado { get; set; } = new oVentas();
    public List<Jefes> listJefes = new List<Jefes>();
    public List<Sucursales> listSucursales = new List<Sucursales>();
    public bool EsEditable { get; set; } = false;

    protected override void OnInitialized()
    {

        oVentasEmpleado = RepService.ObtenerRepresentante(idVendedor);
        listJefes = jefesService.GetJefes();
        listSucursales = sucursalesService.getSucursales();
        EsEditable = idVendedor != 0;
        if (oVentasEmpleado.FechaContrato == default)
        {
            oVentasEmpleado.FechaContrato = DateTime.Today;
        }
    }

    private void guardar()
    {
        if(idVendedor == 0)
        {
            RepService.AgregarRepresentante(oVentasEmpleado);
        }
        else
        {
            RepService.ActualizarRepresentante(oVentasEmpleado,idVendedor);
        }
        navigationManager.NavigateTo("/ListVentas");


    }
    private void regresar()
    {
        navigationManager.NavigateTo("/ListVentas");
    }
    private string FechaMaxima => DateTime.Today.ToString("yyyy-MM-dd");
   
}
