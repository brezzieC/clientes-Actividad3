@inject NavigationManager navigationManager
@inject RepresentantesService RepService
@inject SucursalesService sucursalesService;
@inject ClienteService clienteService;


<EditForm Model="@obCliente" OnValidSubmit="@guardar">
    <DataAnnotationsValidator />
    <div class="mt-3">
        <label>Codigo de Cliente</label>
        <InputNumber class="form-control" @bind-Value="obCliente.CodCLiente" disabled="true" />
        <ValidationMessage For="(() => obCliente.CodCLiente)" />
    </div>
    <div class="mt-3">
        <label>Nombre del Cliente</label>
        <InputText class="form-control" @bind-Value="obCliente.NomCliente" />
        <ValidationMessage For="(() => obCliente.NomCliente)" />
    </div>
    <div class="mt-3">
        <label>Representante</label>
        <InputSelect class="form-control" @bind-Value="obCliente.IDRepresentante">
            @foreach (var item in listaRep)
            {
                <option value="@item.IdEmpleado">@RepService.getNombre(item.IdEmpleado)</option>
            }
        </InputSelect>
        <ValidationMessage For="(() => obCliente.IDRepresentante)" />
    </div>
    <div class="mt-3">
        <label>Limite de Credito</label>
        <InputNumber class="form-control" @bind-Value="obCliente.LimiteCredito" />
        <ValidationMessage For="(() => obCliente.LimiteCredito)" />
    </div>
    <div class="mt-3">
        <button type="submit" class="btn btn-success">Guardar</button>
        <button class="btn btn-danger" onclick="@regresar">Regresar</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int idCliente { get; set; }
    public Cliente obCliente { get; set; } = new Cliente();
    public List<oVentas> listaRep = new List<oVentas>();
    public bool EsEditable { get; set; } = false;

    protected override void OnInitialized()
    {
        obCliente = clienteService.ObtenerCLiente(idCliente);
        listaRep = RepService.GetRepresentantes();
        EsEditable = idCliente != 0;
    }

    private void guardar()
    {
        if (idCliente == 0)
        {
            clienteService.AgregarCliente(obCliente);
        }
        else
        {
            clienteService.ActualizarCliente(obCliente,idCliente);
        }
        navigationManager.NavigateTo("/ListClientes");


    }
    private void regresar()
    {
        navigationManager.NavigateTo("/ListClientes");
    }

}
